# -*- coding: utf-8 -*-
from aiogram import types
from aiogram.dispatcher import FSMContext

from misc import dispatcher, bot
from custom_filters import ChatTypeFilter
from services.auth import Auth, Banned
import config


@dispatcher.message_handler(ChatTypeFilter("private"), commands=['admin'], state=Auth.check_password.banned)
async def any_message(message: types.Message, state: FSMContext):
    remaining = Banned.is_ban(message.from_user.username)
    if remaining:
        await bot.send_message(message.chat.id, f"–¢—ã –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ 1 —á–∞—Å. –û—Å—Ç–∞–ª–æ—Å—å: {remaining} –º–∏–Ω—É—Ç.")
    else:
        await state.reset_state()
        await admin(message, state)


@dispatcher.message_handler(ChatTypeFilter("private"), commands=['start'])
async def start(message: types.Message):
    """ `/start` """
    text = "–®–∞–ª–æ–º –ø–∞—Ä—è! –°–µ–π—á–∞—Å –º—ã –Ω–∞—á–Ω—ë–º –≤–∞–ª–µ–∂–Ω–∏—á–∞—Ç—å –ø–æ –ø–æ–ª–Ω–æ–πüòé\n" \
           "–°–∫–∏–¥—ã–≤–∞–π –º–Ω–µ –º–µ–º–∞—Å–∏–∫–∏, –∞ —É–∂ —è —Ä–∞–∑–±–µ—Ä—É—Å—å —á—Ç–æ —Å –Ω–∏–º–∏ –¥–µ–ª–∞—Ç—åüòâ"
    await bot.send_message(message.chat.id, text)


@dispatcher.message_handler(ChatTypeFilter("private"), commands=['admin'])
async def admin(message: types.Message, state: FSMContext):
    """ `/admin` """
    current_state = await state.get_state()
    if current_state == Auth.settings:
        await bot.send_message(message.chat.id, "–¢—ã —É–∂–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–π, –∏ –º–æ–∂–µ—à—å –≤—Å–µ (/settings).")
        return
    await state.set_state(Auth.check_password.try_1)
    await bot.send_message(message.chat.id, "–ê –Ω—É-–∫–∞ –¥—è–¥—è, –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Ç–æ —á—Ç–æ —è —Ö–æ—á—É —É–≤–∏–¥–µ—Ç—å.")


# ################### Settings
@dispatcher.message_handler(ChatTypeFilter("private"), commands=['exit'], state=Auth.settings)
async def exit(message: types.Message, state: FSMContext):
    """ `/exit - –í—ã–π—Ç–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ` """
    await state.reset_state()
    await bot.send_message(message.chat.id, "–ï—Å–ª–∏ —á—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫ –≤–µ—Ä–Ω—É—Ç—å—Å—èüòâ")


@dispatcher.message_handler(ChatTypeFilter("private"), commands=['set_timeout'], state=Auth.settings)
async def set_timeout(message: types.Message):
    """ `/set_timeout - –í—ã–π—Ç–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ` """
    argument = message.get_args()
    if not argument:
        return await message.reply("–ù–µ–æ–±—Ö–æ–¥–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç <timeout>: –ù–∞–ø—Ä–∏–º–µ—Ä: /set_timeout 4")
    if not argument.isdigit():
        return await message.reply("–ê—Ä–≥—É–º–µ–Ω—Ç <timeout> –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º: –ù–∞–ø—Ä–∏–º–µ—Ä: /set_timeout 4")
    config.TIME_BETWEEN_POSTS = argument
    await bot.send_message(message.chat.id, f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏: {argument} –º–∏–Ω.")


@dispatcher.message_handler(ChatTypeFilter("private"), state=Auth.settings)
async def settings(message: types.Message):
    """ `/settings` """
    text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫:\n\n" \
           "/set_post_channel <channel_id> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.\n\n" \
           "/set_moderate_channel <channel_id> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n\n" \
           "/set_timeout <timeout> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–∞—É—Ç –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏ –≤ –∫–∞–Ω–∞–ª.(—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ –º–∏–Ω—É—Ç–∞—Ö)\n\n" \
           "/exit - –í—ã–π—Ç–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n"
    await bot.send_message(message.chat.id, text)


if __name__ == '__main__':
    pass
